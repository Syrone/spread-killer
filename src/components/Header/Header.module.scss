@use "../../styles/mixins" as mixins;

.header {
	--header-padding-y: 1.5rem;

	padding-block: var(--header-padding-y);
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: 1030;

	&::after {
		content: '';
		display: block;
		background-color: var(--theme-light-rgba-60);
		mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));
		position: absolute;
		top: 0;
		left: max(0rem, calc((100% - var(--container-width)) / 2));
		right: max(0rem, calc((100% - var(--container-width)) / 2));
		bottom: -1.75rem;
		z-index: -1;


		@include mixins.no-touch;
    @include mixins.transition;
	}

	&:global {

		> .container {
			display: flex;
			gap: 1.5rem;

			@include mixins.breakpoint-up(md) {
				gap: 2.5rem;
			}
		}
	}

	&-menu {
		max-width: 20rem;
		width: 100%;
		height: 100%;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		background-color: var(--body-bg);
		border-top-right-radius: 1rem;
		border-bottom-right-radius: 1rem;
		padding: 1.5rem 2rem;
		position: fixed;
		top: 0;
		right: 0;
		z-index: 1040;
		transform: translateX(100%);

		@include mixins.transition;

		@include mixins.breakpoint-up(md) {
			width: initial;
			height: initial;
			background-color: transparent;
			border-radius: initial;
			padding: initial;
			transform: initial;
			position: initial;
			inset: initial;
			z-index: initial;
		}

		&.is-open {
			transform: translateX(0%);
		}

		&-header {
			display: flex;
			align-items: center;
			gap: 1.5rem;

			@include mixins.breakpoint-up(md) {
				display: none;
			}
		}

		&-logo {
			flex: 1;
			display: flex;
			align-items: center;
		}

		&-open {

			@include mixins.breakpoint-up(md) {
				display: none;
			}
		}
	}

	&-nav {
		flex: 1;
		justify-content: center;

		@include mixins.breakpoint-up(md) {
			justify-content: initial;
		}

		&,
		&-list,
		&-item {
			display: flex;
			gap: .75rem;

			@include mixins.breakpoint-up(md) {
				gap: 1.25rem;
			}
		}

		&-list,
		&-item {
			flex-direction: column;

			@include mixins.breakpoint-up(md) {
				flex-direction: row;
			}
		}

		&-item {

			&:not(:last-child) {

				&::after {
					content: '';
					width: .25rem;
					height: calc(.25rem - 1px);
					flex-shrink: 0;
					display: block;
					align-self: center;
					border-top: 1px solid var(--theme-border-rgba-10);
					background-color: var(--theme-border-rgba-10);

					@include mixins.transition;
					@include mixins.no-touch;
				}
			}
		}

		&-button {

			@include mixins.breakpoint-up(md) {
				--_padding: var(--header-padding-y) 0 0;

				margin-top: calc(var(--header-padding-y) * -1);
				position: relative;
			}

			&::before {

				@include mixins.breakpoint-up(md) {
					content: '';
					width: 2rem;
					height: .25rem;
					display: block;
					background-color: transparent;
					position: absolute;
					top: 0;
					left: 50%;
					transform: translateX(-50%);
					clip-path: polygon(
						0% 0%,
						9.37% 100%,
						50% 100%,
						50% 0%,
						100% 0%,
						90.6% 100%,
						50% 100%,
						50% 0%
					);

					@include mixins.no-touch;
					@include mixins.transition;
				}
			}

			@media (hover: hover) {

				&:is(:hover, :focus-visible) {

					&::before {
						background-color: var(--theme-border-rgba-10);
					}
				}
			}

			&:is(:active, :global(.is-active)) {

				&::before {
					background-color: var(--theme-success-color);
				}
			}
		}
	}

	&-buttons {
		flex: 1;
		display: flex;
		align-items: center;
		justify-content: flex-end;
		gap: .625rem;
	}
}