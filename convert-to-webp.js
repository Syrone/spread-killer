// convert-to-webp.js
const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

const inputDir = path.join(__dirname, 'src', 'assets', 'images');

fs.readdir(inputDir, (err, files) => {
  if (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø–∞–ø–∫–∏:', err);
    return;
  }

  files
    .filter(file => /\.(jpe?g|png)$/i.test(file))
    .forEach(file => {
      const inputPath = path.join(inputDir, file);
      const outputPath = path.join(inputDir, file.replace(/\.(jpe?g|png)$/i, '.webp'));

      // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –µ—Å–ª–∏ .webp —É–∂–µ –µ—Å—Ç—å
      if (fs.existsSync(outputPath)) {
        console.log(`‚úÖ ${outputPath} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        return;
      }

      sharp(inputPath)
        .webp({ quality: 75 })
        .toFile(outputPath)
        .then(() => console.log(`üü¢ –°–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${file} ‚Üí ${path.basename(outputPath)}`))
        .catch(err => console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${file}:`, err));
    });
});
